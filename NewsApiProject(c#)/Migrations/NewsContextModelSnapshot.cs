// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsApiProject.DataAccessLayer;

#nullable disable

namespace NewsApiProject.Migrations
{
    [DbContext(typeof(NewsContext))]
    partial class NewsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewsApiProject.Models.NewsCast", b =>
                {
                    b.Property<int>("NewsCastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsCastId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MultimediaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NewsDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsSourceId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsCastId");

                    b.HasIndex("NewsCategoryId");

                    b.HasIndex("NewsSourceId");

                    b.ToTable("NewsCast");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsCategory", b =>
                {
                    b.Property<int>("NewsCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsCategoryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCategory")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("NewsCategoryId");

                    b.ToTable("NewsCategory");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsComment", b =>
                {
                    b.Property<int>("NewsCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsCommentId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsCastId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NewsCommentId");

                    b.HasIndex("NewsCastId");

                    b.HasIndex("UserId");

                    b.ToTable("NewsComment");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsFav", b =>
                {
                    b.Property<int>("NewsFavId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsFavId"));

                    b.Property<DateTime>("Fav")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsCastId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NewsFavId");

                    b.HasIndex("NewsCastId");

                    b.HasIndex("UserId");

                    b.ToTable("NewsFav");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsShare", b =>
                {
                    b.Property<int>("NewsShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsShareId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsCastId")
                        .HasColumnType("int");

                    b.Property<int>("SendUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShareDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NewsShareId");

                    b.HasIndex("NewsCastId");

                    b.HasIndex("UserId");

                    b.ToTable("NewsShare");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsSource", b =>
                {
                    b.Property<int>("NewsSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsSourceId"));

                    b.Property<string>("CorpationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorpationPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SourceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NewsSourceId");

                    b.ToTable("NewsSource");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsSubscriber", b =>
                {
                    b.Property<int>("NewsSubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsSubscriberId"));

                    b.Property<DateTime>("DateSubscriber")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NewsSourceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NewsSubscriberId");

                    b.HasIndex("NewsSourceId");

                    b.HasIndex("UserId");

                    b.ToTable("NewsSubscriber");
                });

            modelBuilder.Entity("NewsApiProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsCast", b =>
                {
                    b.HasOne("NewsApiProject.Models.NewsCategory", "NewsCategory")
                        .WithMany("NewsCast")
                        .HasForeignKey("NewsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApiProject.Models.NewsSource", "NewsSource")
                        .WithMany("NewsCast")
                        .HasForeignKey("NewsSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsCategory");

                    b.Navigation("NewsSource");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsComment", b =>
                {
                    b.HasOne("NewsApiProject.Models.NewsCast", "NewsCast")
                        .WithMany("NewsComment")
                        .HasForeignKey("NewsCastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApiProject.Models.User", "User")
                        .WithMany("NewsComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsCast");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsFav", b =>
                {
                    b.HasOne("NewsApiProject.Models.NewsCast", "NewsCast")
                        .WithMany("NewsFav")
                        .HasForeignKey("NewsCastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApiProject.Models.User", "User")
                        .WithMany("NewsFav")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsCast");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsShare", b =>
                {
                    b.HasOne("NewsApiProject.Models.NewsCast", "NewsCast")
                        .WithMany("NewsShare")
                        .HasForeignKey("NewsCastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApiProject.Models.User", "User")
                        .WithMany("NewsShare")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsCast");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsSubscriber", b =>
                {
                    b.HasOne("NewsApiProject.Models.NewsSource", "NewsSource")
                        .WithMany("NewsSubscribers")
                        .HasForeignKey("NewsSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsApiProject.Models.User", "User")
                        .WithMany("NewsSubscriber")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsSource");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsCast", b =>
                {
                    b.Navigation("NewsComment");

                    b.Navigation("NewsFav");

                    b.Navigation("NewsShare");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsCategory", b =>
                {
                    b.Navigation("NewsCast");
                });

            modelBuilder.Entity("NewsApiProject.Models.NewsSource", b =>
                {
                    b.Navigation("NewsCast");

                    b.Navigation("NewsSubscribers");
                });

            modelBuilder.Entity("NewsApiProject.Models.User", b =>
                {
                    b.Navigation("NewsComments");

                    b.Navigation("NewsFav");

                    b.Navigation("NewsShare");

                    b.Navigation("NewsSubscriber");
                });
#pragma warning restore 612, 618
        }
    }
}
